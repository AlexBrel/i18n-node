{"body":"# i18n\r\n\r\nLightweight simple translation module with dynamic json storage. \r\nUses common __('...') syntax in app and templates.\r\nStores language files in json files compatible to [webtranslateit](http://webtranslateit.com/) json format.\r\nAdds new strings on-the-fly when first used in your app.\r\nNo extra parsing needed.\r\n\r\n[![Build Status](https://secure.travis-ci.org/mashpie/i18n-node.png?branch=master)](http://travis-ci.org/mashpie/i18n-node)\r\n\r\n## Install\r\n\r\n\tnpm install i18n\r\n\t\r\n## Test \r\n\r\n\tnpm test\r\n\r\n## Load\r\nin your app.js\r\n\r\n\t// load modules\r\n\tvar express = require('express'),\r\n\t    i18n = require(\"i18n\");\r\n\t\r\nnow you are ready to use `i18n.__('Hello')`.\r\n\r\n## Configure\r\nuse configure to setup these:\r\n\r\n    i18n.configure({\r\n        // setup some locales - other locales default to en silently\r\n        locales:['en', 'de'],\r\n\r\n        // where to register __() and __n() to, might be \"global\" if you know what you are doing\r\n        register: global\r\n    });\r\n\r\n**CAREFULL:** as jade uses `__` as internal variable you need to register view helpers tweaked to your needs when used with jade.\r\n\r\n### tweak helpers \r\nconfigure i18n without register: global\r\n\r\n\ti18n.configure({\r\n\t    // setup some locales - other locales default to en silently\r\n\t    locales:['en', 'de'],\r\n\t});\r\n\r\nand register view helpers on your own\r\n\r\n\t// register helpers for use in templates\r\n\tapp.helpers({\r\n\t  __i: i18n.__,\r\n\t  __n: i18n.__n\r\n\t});\r\n\r\n### hook into express configure\r\n\r\nin an express app, you might use i18n.init to gather language settings of your visitors, ie:\r\n\r\n\t// Configuration\r\n\tapp.configure(function() {\r\n\r\n    \t[...]\r\n\r\n\t    // using 'accept-language' header to guess language settings\r\n\t    app.use(i18n.init);\r\n\t    app.use(app.router);\r\n\t    app.use(express.static(__dirname + '/public'));\r\n\t});\r\n\t\r\n## Use\r\n\r\nin your app\r\n\r\n\tvar greeting = __('Hello');\r\n\t\r\nin your template (depending on your template compiler)\r\n\t\r\n\t<%= __('Hello') %>\r\n\t\r\n\t${__('Hello')}\r\n\t\r\n### sprintf support\r\n\r\n\tvar greeting = __('Hello %s, how are you today?', 'Marcus');\r\n\t\r\nthis puts **Hello Marcus, how are you today?**. You might add endless arguments and even nest it.\r\n\r\n\tvar greeting = __('Hello %s, how are you today? How was your %s.', 'Marcus', __('weekend'));\r\n\t\r\nwhich puts **Hello Marcus, how are you today? How was your weekend.**\r\n\r\n### variable support\r\n\r\nyou might even use dynamic variables. They get added to the `en.js` file if not yet existing.\r\n\r\n\tvar greetings = ['Hi', 'Hello', 'Howdy'];        \r\n    for (var i=0; i < greetings.length; i++) {\r\n        console.log( __(greetings[i]) );\r\n    };\r\n\r\nwhich puts \r\n\r\n\tHi\r\n\tHello\r\n\tHowdy\r\n\r\n### plural support\r\n\r\ndifferent plural froms are supported as response to `count`:\r\n\r\n\tvar singular = __n('%s cat', '%s cats', 1);\r\n    var plural = __n('%s cat', '%s cats', 3);\r\n\r\nthis puts **1 cat** or **3 cats**\r\nand again these could get nested:\r\n\r\n\tvar singular = __n('There is one monkey in the %%s', 'There are %d monkeys in the %%s', 1, 'tree');\r\n\tvar plural = __n('There is one monkey in the %%s', 'There are %d monkeys in the %%s', 3, 'tree');\r\n\t\r\nputting **There is one monkey in the tree** or **There are 3 monkeys in the tree**\r\n\r\n## Storage\r\n\r\n### json file\r\n\r\nthe above will automatically generate a `en.js` by default inside `./locales/` which looks like\r\n\r\n\t{\r\n\t\t\"Hello\": \"Hello\",\r\n\t\t\"Hello %s, how are you today?\": \"Hello %s, how are you today?\",\r\n\t\t\"weekend\": \"weekend\",\r\n\t\t\"Hello %s, how are you today? How was your %s.\": \"Hello %s, how are you today? How was your %s.\",\r\n\t\t\"Hi\": \"Hi\",\r\n\t\t\"Howdy\": \"Howdy\",\r\n\t\t\"%s cat\": {\r\n\t\t\t\"one\": \"%s cat\",\r\n\t\t\t\"other\": \"%s cats\"\r\n\t\t},\r\n\t\t\"There is one monkey in the %%s\": {\r\n\t\t\t\"one\": \"There is one monkey in the %%s\",\r\n\t\t\t\"other\": \"There are %d monkeys in the %%s\"\r\n\t\t},\r\n\t\t\"tree\": \"tree\"\r\n\t}\r\n\r\nthat file can be edited or just uploaded to [webtranslateit](http://docs.webtranslateit.com/file_formats/) for any kind of collaborative translation workflow:\r\n\r\n\t{\r\n\t\t\"Hello\": \"Hallo\",\r\n\t\t\"Hello %s, how are you today?\": \"Hallo %s, wie geht es dir heute?\",\r\n\t\t\"weekend\": \"Wochenende\",\r\n\t\t\"Hello %s, how are you today? How was your %s.\": \"Hallo %s, wie geht es dir heute? Wie war dein %s.\",\r\n\t\t\"Hi\": \"Hi\",\r\n\t\t\"Howdy\": \"HallÃ¶chen\",\r\n\t\t\"%s cat\": {\r\n\t\t\t\"one\": \"%s Katze\",\r\n\t\t\t\"other\": \"%s Katzen\"\r\n\t\t},\r\n\t\t\"There is one monkey in the %%s\": {\r\n\t\t\t\"one\": \"Im %%s sitzt ein Affe\",\r\n\t\t\t\"other\": \"Im Baum sitzen %d Affen\"\r\n\t\t},\r\n\t\t\"tree\": \"Baum\"\r\n\t}\r\n\t\r\n## Changelog\r\n\r\n* 0.3.5: fixed some issues, prepared refactoring, prepared publishing to npm finally\r\n* 0.3.4: merged pull request #13 from Fuitad/master and updated README\r\n* 0.3.3: merged pull request from codders/master and modified for backward compatibility. Usage and tests pending\r\n* 0.3.2: merged pull request #7 from carlptr/master and added tests, modified fswrite to do sync writes\r\n* 0.3.0: added configure and init with express support (calling guessLanguage() via 'accept-language')\r\n* 0.2.0: added plurals\r\n* 0.1.0: added tests\r\n* 0.0.1: start ","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"I18n-node","tagline":"Lightweight simple translation module for node.js / express.js with dynamic json storage. Uses common __('...') syntax in app and templates.","google":""}